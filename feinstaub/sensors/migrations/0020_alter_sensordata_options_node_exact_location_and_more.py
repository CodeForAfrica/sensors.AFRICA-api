# Generated by Django 4.2.1 on 2023-05-28 11:00

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("sensors", "0019_auto_20190125_0521"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="sensordata", options={"get_latest_by": "modified"},
        ),
        migrations.AddField(
            model_name="node",
            name="exact_location",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="node",
            name="inactive",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="node", name="indoor", field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="sensorlocation",
            name="altitude",
            field=models.DecimalField(
                blank=True, decimal_places=8, max_digits=14, null=True
            ),
        ),
        migrations.AlterField(
            model_name="sensordatavalue", name="value", field=models.TextField(),
        ),
        migrations.AlterField(
            model_name="sensordatavalue",
            name="value_type",
            field=models.CharField(
                choices=[
                    ("P0", "1µm particles"),
                    ("P1", "10µm particles"),
                    ("P2", "2.5µm particles"),
                    ("durP1", "duration 1µm"),
                    ("durP2", "duration 2.5µm"),
                    ("ratioP1", "ratio 1µm in percent"),
                    ("ratioP2", "ratio 2.5µm in percent"),
                    ("samples", "samples"),
                    ("interval", "measurement interval"),
                    ("min_micro", "min_micro"),
                    ("max_micro", "max_micro"),
                    ("N05", "count 0.5µm particles"),
                    ("N1", "count 1µm particles"),
                    ("N25", "count 2.5µm particles"),
                    ("N4", "count 4µm particles"),
                    ("N10", "count 1µm particles"),
                    ("TS", "typical particle size"),
                    ("temperature", "Temperature"),
                    ("humidity", "Humidity"),
                    ("pressure", "Pa"),
                    ("altitude", "meter"),
                    ("pressure_sealevel", "Pa (sealevel)"),
                    ("brightness", "Brightness"),
                    ("dust_density", "Dust density in mg/m3"),
                    ("vo_raw", "Dust voltage raw"),
                    ("voltage", "Dust voltage calculated"),
                    ("P10", "1µm particles"),
                    ("P25", "2.5µm particles"),
                    ("durP10", "duration 1µm"),
                    ("durP25", "duration 2.5µm"),
                    ("ratioP10", "ratio 1µm in percent"),
                    ("ratioP25", "ratio 2.5µm in percent"),
                    ("door_state", "door state (open/closed)"),
                    ("lat", "latitude"),
                    ("lon", "longitude"),
                    ("height", "height"),
                    ("hdop", "horizontal dilusion of precision"),
                    ("timestamp", "measured timestamp"),
                    ("age", "measured age"),
                    ("satelites", "number of satelites"),
                    ("speed", "current speed over ground"),
                    ("azimuth", "track angle"),
                    ("noise_LA_min", "Sound level min"),
                    ("noise_LA_max", "Sound level max"),
                    ("noise_L01", "Sound level L01"),
                    ("noise_L95", "Sound level L95"),
                    ("noise_Leq", "Sound level Leq"),
                    ("counts_per_second", "Counts per second"),
                    ("counts_per_minute", "Counts per minute"),
                    ("radiation_msi", "MilliSievert"),
                    ("hv_pulses", "Count of high voltage pulses"),
                    ("counts", "Counts"),
                    ("radiation_msi", "MilliSievert"),
                    ("sample_time_ms", "Time per sample"),
                    ("co_kohm", "CO in kOhm"),
                    ("co_ppb", "CO in ppb"),
                    ("eco2", "eCO2 in ppm"),
                    ("co2_ppb", "CO2 in ppb"),
                    ("no2_kohm", "NO2 in kOhm"),
                    ("no2_ppb", "NO2 in ppb"),
                    ("ozone_ppb", "O3 in ppb"),
                    ("so2_ppb", "SO2 in ppb"),
                ],
                db_index=True,
                max_length=100,
            ),
        ),
        migrations.AddIndex(
            model_name="sensorlocation",
            index=models.Index(fields=["country"], name="country_idx"),
        ),
        migrations.AddIndex(
            model_name="sensorlocation",
            index=models.Index(fields=["city"], name="city_idx"),
        ),
    ]
